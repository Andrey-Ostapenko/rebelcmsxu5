@inherits WebViewPage<IList<Rebel.Cms.Web.PropertyEditors.ColorSwatchPicker.ColorItem>>
              
@using Rebel.Cms.Web;
@using ClientDependency.Core;
@using ClientDependency.Core.Mvc;
@using System.Web.Helpers;
@using System.Web.Mvc;
@using System.Web.Mvc.Ajax;
@using System.Web.Mvc.Html;
@using System.Web.Routing;
@using System.Web.WebPages;
@using Microsoft.Web.Mvc;
@using Rebel.Cms.Web.PropertyEditors.ColorSwatchPicker;
@using Rebel.Cms.Web.EmbeddedViewEngine;
@using Rebel.Cms.Web.PropertyEditors;

@{ 
    Html
        .RequiresJsResource(typeof(ColorSwatchPickerEditor), "Rebel.Cms.Web.PropertyEditors.ColorSwatchPicker.Resources.ColorSwatchPickerPrevalueEditor.js")
        .RequiresCssResource(typeof(ColorSwatchPickerEditor), "Rebel.Cms.Web.PropertyEditors.ColorSwatchPicker.Resources.ColorSwatchPickerPrevalueEditor.css");
        
}

<script type="text/javascript">

    (function ($) {
        $(document).ready(function () {

            Rebel.PropertyEditors.ColorSwatchPickerPrevalueEditor.init({
                containerId: "#color-items",
                templateId: "#colorItemTemplate",
                addId: "#add"
            });
        });
    })(jQuery);

</script>
<script type="text/x-jquery-tmpl" id="colorItemTemplate">
        @Html.CollectionItemJQueryTemplate(EmbeddedViewPath.Create("Rebel.Cms.Web.PropertyEditors.ColorSwatchPicker.Views.ColorItem.cshtml,Rebel.Cms.Web.PropertyEditors"), new ColorItem())
</script>

<ul id="color-items">
@if (Model != null)
{ 
    foreach (ColorItem item in Model)
    {
         Html.RenderPartial(
             EmbeddedViewPath.Create(
                 "Rebel.Cms.Web.PropertyEditors.ColorSwatchPicker.Views.ColorItem.cshtml,Rebel.Cms.Web.PropertyEditors"),
                 item);
     }
}
</ul>
<a id="add" href="#">Add another color</a>